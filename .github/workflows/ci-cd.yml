name: Build And Deploy Dokcer Image For Mail Server
on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'liberica'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Debug target directory
        run: ls -la target/ || echo "target/ directory not found"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build And Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: Dockerfile
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Login to Yandex Cloud Container Registry
        uses: yc-actions/yc-cr-login@v3
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_CI_CD_KEY_JSON }}

      - name: Pull from Docker Hub and Push to Yandex CR
        env:
          CR_REGISTRY_ID: ${{ vars.YC_REGISTRY_ID }}
          IMAGE_NAME: ${{ github.event.repository.name }}
          IMAGE_TAG: latest
        run: |
          docker pull ${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          
          docker tag ${{ vars.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
          cr.yandex/${{ env.CR_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          
          docker push cr.yandex/${{ env.CR_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Serverless Container
        uses: yc-actions/yc-sls-container-deploy@v3
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_CI_CD_KEY_JSON  }}
          container-name: ${{ vars.YC_CONTAINER_NAME }}
          folder-id: ${{ vars.YC_FOLDER_ID }}
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-cores: 1
          revision-memory: 512Mb
          revision-core-fraction: 100
          revision-image-url: cr.yandex/${{ vars.YC_REGISTRY_ID }}/${{ github.event.repository.name }}:latest
          revision-execution-timeout: 20
          revision-commands: java -jar application.jar
          revision-env: |
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME}}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD}}
            DATABASE_URL=${{ secrets.DATABASE_URL}}
            EMAIL_SERVER_PASSWORD=${{ secrets.EMAIL_SERVER_PASSWORD}}
            EMAIL_SERVER_USERNAME=${{ vars.EMAIL_SERVER_USERNAME}}
            EMAIL_SERVER_SECRET=${{ secrets.EMAIL_SERVER_SECRET}}